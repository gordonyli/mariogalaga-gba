#define REG_DISPCNT *(unsigned short *)0x4000000
#define MODE_3 3
#define BG2_EN (1<<10)

#define WIDTH 240
#define HEIGHT 160

#define COLOR(r, g, b)  ((r) | (g)<<5 | (b)<<10)
#define RED COLOR(31,0,0)
#define GREEN COLOR(0,31,0)
#define BLUE COLOR(0,0,31)
#define YELLOW COLOR(31,31,0)
#define CYAN COLOR(0, 31, 31)
#define MAGENTA COLOR(31,0,31)
#define WHITE COLOR(31,31,31)
#define BLACK 0
#define GRAY COLOR(15,15,15)

#define OFFSET(r, c, rowlen) ((r)*(rowlen) + (c))

#define SCANLINECOUNTER *(volatile unsigned short *)0x4000006 
#define MAX 100


typedef unsigned short u16;
typedef unsigned int u32;
u16 *videoBuffer = (u16*) 0x6000000;


// Buttons

#define BUTTON_A		(1<<0)
#define BUTTON_B		(1<<1)
#define BUTTON_SELECT	(1<<2)
#define BUTTON_START	(1<<3)
#define BUTTON_RIGHT	(1<<4)
#define BUTTON_LEFT		(1<<5)
#define BUTTON_UP		(1<<6)
#define BUTTON_DOWN		(1<<7)
#define BUTTON_R		(1<<8)
#define BUTTON_L		(1<<9)

#define KEY_DOWN_NOW(key)  (~(BUTTONS) & key)

#define BUTTONS *(volatile unsigned int *)0x4000130
typedef struct
{
	const volatile void *src;
	const volatile void *dst;
	volatile u32 cnt;
} DMA_CONTROLLER;

typedef struct {
	int height;
	int width;
	int row;
	int col;
	int rdel;
	int cdel;
	volatile u16 color;
	int lives;
} Shooter;

typedef struct {
	int height;
	int width;
	int row;
	int col;
	int rdel;
	volatile u16 color;
	int onScreen;
} Bullet;

typedef struct {
	int alive;
	int health;
	int height;
	int width;
	int row;
	int col;
	int rdel;
	int cdel;
	volatile u16 color;
	int pawn;
} Alien;

typedef struct {
	int alive;
	int health;
	int height;
	int width;
	int row;
	int col;
	int rdel;
	int cdel;
	volatile u16 color;
} Stalker;
#define DMA ((volatile DMA_CONTROLLER *) 0x040000B0)

// Defines
#define DMA_CHANNEL_0 0
#define DMA_CHANNEL_1 1
#define DMA_CHANNEL_2 2
#define DMA_CHANNEL_3 3

#define DMA_DESTINATION_INCREMENT (0 << 21)
#define DMA_DESTINATION_DECREMENT (1 << 21)
#define DMA_DESTINATION_FIXED (2 << 21)
#define DMA_DESTINATION_RESET (3 << 21)

#define DMA_SOURCE_INCREMENT (0 << 23)
#define DMA_SOURCE_DECREMENT (1 << 23)
#define DMA_SOURCE_FIXED (2 << 23)

#define DMA_REPEAT (1 << 25)

#define DMA_16 (0 << 26)
#define DMA_32 (1 << 26)

#define DMA_NOW (0 << 28)
#define DMA_AT_VBLANK (1 << 28)
#define DMA_AT_HBLANK (2 << 28)
#define DMA_AT_REFRESH (3 << 28)

#define DMA_IRQ (1 << 30)
#define DMA_ON (1 << 31)

void bulletCollision();
void drawRect(int row, int col, int height, int width, u16 color);
void setPixel(int r, int c, unsigned short color);
void fillScreen3(unsigned short color);
void waitForVBlank();
void drawString3(int x, int y, const char *str, unsigned short color);
//void waitForVblank();
